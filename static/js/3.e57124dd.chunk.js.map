{"version":3,"sources":["hoc/withAuthRedirect.js","components/Profile/MyPosts/MyPosts.module.css","components/Profile/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","Post","className","s","item","src","alt","message","likecount","maxLength10","maxLengthCreator","MyPostsReduxForm","reduxForm","form","onSubmit","handleSubmit","postsBlock","Field","name","placeholder","component","Textarea","validate","required","MyPosts","postsElements","profilePage","postsData","map","p","likesCount","id","values","handleAddPost","newPostText","posts","MyPostsContainer","dispatch","action","addPostActionCreator","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","onChange","e","currentTarget","value","autoFocus","onBlur","updateStatus","ProfileInfo","profile","descriptionBlock","photos","large","aboutMe","no_bullets","Object","keys","contacts","key","lookingForAJob","toString","lookingForAJobDescription","fullName","Preloader","Profile","ProfileContainer","userId","match","params","authorizedUserId","history","push","getUserProfile","getStatus","compose","withRouter"],"mappings":"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","file":"static/js/3.e57124dd.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>     \r\n        }\r\n    }\r\n\r\n    let connectedAuthRedirectComponent \r\n    = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return connectedAuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__ZWbVv\",\"posts\":\"MyPosts_posts__3nWhH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1Kq9C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3-P_q\",\"no_bullets\":\"ProfileInfo_no_bullets__15-1C\"};","import s from './Post.module.css'\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://images.pexels.com/photos/905021/pexels-photo-905021.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\" alt=\"avatar\"/>\r\n        {props.message}\r\n        <div>\r\n        <span>like:{props.likecount}</span>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default Post","import s from './MyPosts.module.css'\r\nimport React from 'react'\r\nimport Post from '../Post/Post'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators'\r\nimport { Textarea } from '../../Common/FormControls/FormControls'\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst MyPostsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.postsBlock}>\r\n            <div>\r\n                <Field name={'newPostText'} \r\n                    placeholder={'New Post'}\r\n                    component={Textarea}\r\n                    validate={[required, maxLength10]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n} \r\n\r\nconst MyPostsReduxForm = reduxForm({form: 'message form'})\r\n(MyPostsForm)\r\n\r\nconst MyPosts = (props) => {\r\n    let postsElements = props.profilePage.postsData.map(\r\n        p=><Post key={p.id} message={p.message} likesCount={p.likesCount}/>)\r\n    const addNewPost = (values) => {\r\n        props.handleAddPost(values.newPostText)\r\n        values.newPostText = ''\r\n    }\r\n    return (\r\n    <div>\r\n        <h3>My posts</h3>\r\n        <MyPostsReduxForm onSubmit={addNewPost}/> \r\n        <div className={s.posts}>\r\n        {postsElements}\r\n        </div>\r\n    </div> \r\n    )\r\n}\r\n    \r\nexport default MyPosts","import { connect } from 'react-redux'\r\nimport { addPostActionCreator } from '../../../redux/profileReducer'\r\nimport MyPosts from './MyPosts'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        profilePage: state.profilePage\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        handleAddPost : (newPostText) => {\r\n            let action = addPostActionCreator(newPostText) \r\n            dispatch(action)\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, \r\n    mapDispatchToProps)\r\n    (MyPosts)\r\nexport default MyPostsContainer","import React, {useEffect, useState} from 'react'\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n    \r\n    useEffect(() => {\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n      \r\n    return(\r\n        <div>Status: \r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode}>\r\n                        {props.status||\"----\"}</span>\r\n                </div>\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} \r\n                    autoFocus={true} \r\n                    onBlur={deactivateEditMode} \r\n                    value={status}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks","import s from \"./ProfileInfo.module.css\"\r\nimport Preloader from \"../../Common/Preloader/Preloader\"\r\nimport ProfileStatusWithHooks from \"../ProfileStatusWithHooks\"\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n    return (\r\n        <div>\r\n            <div className={s.item}>\r\n                {/* <img\r\n                    src=\"https://images.pexels.com/photos/1143006/pexels-photo-1143006.jpeg?auto=compress&cs=tinysrgb&dpr=2&w=500\"\r\n                    alt=\"sea img\"\r\n                /> */}\r\n                <div className={s.descriptionBlock}>\r\n                    <img src={props.profile.photos.large} alt=\"large_pic\"/>\r\n                </div>\r\n                <div>\r\n                    <ProfileStatusWithHooks status={props.status}\r\n                    updateStatus={props.updateStatus}/>\r\n                </div>\r\n                <div>About me: {props.profile.aboutMe}</div>\r\n                <ul className={s.no_bullets}>Contacts: \r\n                    {Object.keys(props.profile.contacts).map\r\n                    (function (key)\r\n                    {\r\n                        return (\r\n                        <li key={key} className={s.no_bullets}>{props.profile.contacts[key]}</li>\r\n                        )\r\n                    })}</ul>\r\n                <div>Looking for a job: {props.profile.lookingForAJob.toString()}</div>\r\n                <div>Looking for a job description: {props.profile.lookingForAJobDescription}</div>\r\n                <div>Fullname: {props.profile.fullName}</div>\r\n            </div>\r\n             <div className={s.descriptionBlock}>ava + description</div>\r\n        </div>\r\n    )\r\n}\r\nexport default ProfileInfo","import MyPostsContainer from \"./MyPosts/MyPostsContainer\"\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\"\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile}\r\n            status={props.status} updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Profile from './Profile'\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profileReducer'\r\nimport { withRouter } from 'react-router'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { compose } from 'redux'\r\n\r\nclass ProfileContainer extends React.Component{\r\n    componentDidMount(){\r\n        let userId = this.props.match.params.userId\r\n        if(!userId) {\r\n            userId=this.props.authorizedUserId\r\n            if(!userId){\r\n                this.props.history.push(\"/login\")\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n    render(){\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}\r\n            status={this.props.status} \r\n            updateStatus={this.props.updateStatus}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId\r\n})\r\n\r\nexport default compose (\r\n    connect (mapStateToProps, \r\n    {getUserProfile, getStatus, updateStatus}),\r\n    withRouter,\r\n//    withAuthRedirect\r\n)\r\n    (ProfileContainer)\r\n"],"sourceRoot":""}