{"version":3,"sources":["hoc/withAuthRedirect.js","components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","module","exports","DialogItem","className","s","dialogsItems","active","id","src","image_src","alt","name","Message","isNotPageOwner","userId","notPageOwner","messageContainer","message","circle","maxLength10","maxLengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","textarea","Field","component","Textarea","validate","required","placeholder","btn","Dialogs","dialogsPage","dialogsElements","dialogsData","map","dialog","messageElements","messagesData","dialogs","messages","values","handleSendMessage","newMessageText","compose","dispatch","action","addMessageActionCreator"],"mappings":"4OAIIA,EAA6B,SAACC,GAAD,MAAY,CACzCC,OAAQD,EAAME,KAAKD,SAGVE,EAAmB,SAACC,GAAe,IACtCC,EADqC,4JAEvC,WACI,OAAIC,KAAKC,MAAMN,OACR,cAACG,EAAD,eAAeE,KAAKC,QADG,cAAC,IAAD,CAAUC,GAAI,eAHT,GACXC,IAAML,WAUtC,OAFEM,YAAQX,EAARW,CAAoCL,K,oBChB1CM,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,iBAAmB,kCAAkC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,0BAA0B,IAAM,uB,+GCY1WC,EARI,SAACN,GAChB,OACI,qBAAKO,UAAWC,IAAEC,aAAe,IAAMD,IAAEE,OAAzC,SACI,eAAC,IAAD,CAAST,GAAI,YAAYD,EAAMW,GAA/B,UAAmC,qBAAKC,IAAKZ,EAAMa,UAAWC,IAAI,YAAlE,IAA+Ed,EAAMe,WCMlFC,EAZC,SAAChB,GACb,IAAIiB,EAAkC,IAAjBjB,EAAMkB,OAAeV,IAAEW,aAAe,GAC3D,OACI,qBAAKZ,UAAWC,IAAEY,iBAAmB,IAAMH,EAA3C,SACI,sBAAKV,UAAWC,IAAEa,QAAlB,UACI,qBAAKd,UAAWC,IAAEc,SACjBtB,EAAMqB,QAFX,IAEqBrB,EAAMkB,a,wCCCjCK,EAAcC,YAAiB,IAmB/BC,EAAmBC,YAAU,CAACC,KAAK,gBAAhBD,EAjBL,SAAC1B,GACjB,OACI,uBAAM4B,SAAU5B,EAAM6B,aAActB,UAAWC,IAAEsB,SAAjD,UACQ,8BACI,cAACC,EAAA,EAAD,CACAC,UAAWC,IACXC,SAAU,CAACC,IAAUZ,GACrBa,YAAa,eACbrB,KAAM,qBAEV,8BACI,wBAAQR,UAAWC,IAAE6B,IAArB,kCA+BLC,EAtBC,SAACtC,GACb,IAAIP,EAAQO,EAAMuC,YACdC,EAAkB/C,EAAMgD,YAAYC,KAAI,SAAAC,GAAM,OAC9C,cAAC,EAAD,CAA4B5B,KAAM4B,EAAO5B,KAAMG,OAAQyB,EAAOzB,OAAQL,UAAW8B,EAAO9B,UAAWF,GAAIgC,EAAOhC,IAA7FgC,EAAOhC,OACpBiC,EAAkBnD,EAAMoD,aAAaH,KAAI,SAAArB,GAAO,OAChD,cAAC,EAAD,CAA0BA,QAASA,EAAQA,QAASH,OAAQG,EAAQH,OAAQP,GAAIU,EAAQV,IAA1EU,EAAQV,OAK9B,OACI,sBAAKJ,UAAWC,IAAEsC,QAAlB,UACI,qBAAKvC,UAAWC,IAAEC,aAAlB,SACK+B,IAEL,qBAAKjC,UAAWC,IAAEuC,SAAlB,SACKH,IAEL,cAACnB,EAAD,CAAkBG,SAZJ,SAACoB,GACnBhD,EAAMiD,kBAAkBD,EAAOE,gBAC/BF,EAAOE,eAAiB,UClBjBC,4BACXhD,aAhBkB,SAACV,GACnB,MAAO,CACH8C,YAAa9C,EAAM8C,gBAIF,SAACa,GACtB,MAAO,CACCH,kBAAmB,SAACC,GACpB,IAAIG,EAASC,YAAwBJ,GACrCE,EAASC,QAOjBzD,IAFWuD,CAGbb","file":"static/js/4.78af95a7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component{\r\n        render(){\r\n            if(!this.props.isAuth) return <Redirect to={'/login'}/>\r\n            return <Component {...this.props}/>     \r\n        }\r\n    }\r\n\r\n    let connectedAuthRedirectComponent \r\n    = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return connectedAuthRedirectComponent\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2G5rA\",\"dialogsItems\":\"Dialogs_dialogsItems__One0i\",\"active\":\"Dialogs_active__2S0mc\",\"messages\":\"Dialogs_messages__3Ljag\",\"messageContainer\":\"Dialogs_messageContainer__qj-Mm\",\"message\":\"Dialogs_message__2BsmZ\",\"notPageOwner\":\"Dialogs_notPageOwner__XIxob\",\"circle\":\"Dialogs_circle__1SlfA\",\"textarea\":\"Dialogs_textarea__ctqgQ\",\"btn\":\"Dialogs_btn__1uEjI\"};","import { NavLink } from 'react-router-dom'\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\n//{s.active}:Dialogs_active__2S0mc\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.dialogsItems + ' ' + s.active}>\r\n            <NavLink to={\"/dialogs/\"+props.id}><img src={props.image_src} alt=\"mem_pic\"/> {props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem","import s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    let isNotPageOwner = props.userId !== 0 ? s.notPageOwner : ''\r\n    return (\r\n        <div className={s.messageContainer + ' ' + isNotPageOwner}>\r\n            <div className={s.message}>\r\n                <div className={s.circle}></div>\r\n                {props.message} {props.userId}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message","import {Redirect} from 'react-router-dom'\r\nimport DialogItem from './DialogItem/DialogItem'\r\nimport s from './Dialogs.module.css'\r\nimport Message from './Message/Message'\r\nimport React from 'react'\r\nimport {Field, reduxForm} from 'redux-form'\r\nimport { maxLengthCreator, required } from '../../utils/validators/validators'\r\nimport { Textarea } from '../Common/FormControls/FormControls'\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst DialogsForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} className={s.textarea}>\r\n                <div>\r\n                    <Field \r\n                    component={Textarea}\r\n                    validate={[required, maxLength10]} \r\n                    placeholder={\"Your Message\"} \r\n                    name={\"newMessageText\"}/>\r\n                </div>\r\n                <div>\r\n                    <button className={s.btn}>Send message</button>\r\n                </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({form:\"dialogs form\"})\r\n(DialogsForm)\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage\r\n    let dialogsElements = state.dialogsData.map(dialog =>\r\n        <DialogItem key={dialog.id} name={dialog.name} userId={dialog.userId} image_src={dialog.image_src} id={dialog.id} />)\r\n        let messageElements = state.messagesData.map(message =>\r\n            <Message key={message.id} message={message.message} userId={message.userId} id={message.id} />)\r\n    const addNewMessage = (values) => {\r\n        props.handleSendMessage(values.newMessageText)\r\n        values.newMessageText = ''\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messageElements}\r\n            </div>\r\n            <DialogsReduxForm onSubmit={addNewMessage}/>\r\n        </div>\r\n    )\r\n}\r\nexport default Dialogs","import { connect } from 'react-redux'\r\nimport { compose } from 'redux'\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect'\r\nimport { addMessageActionCreator} from '../../redux/dialogsReducer'\r\nimport Dialogs from './Dialogs'\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n            handleSendMessage: (newMessageText) => {\r\n            let action = addMessageActionCreator(newMessageText)\r\n            dispatch(action)\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)"],"sourceRoot":""}